<!DOCTYPE html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://freesurgenode.github.io/news/article-18726.htm" />
    <!-- Required meta tags -->
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <title>Go使用Gin+mysql实现增删改查</title>
        <meta name="description" content="0.前置知识   Go中的struct。   mysql、Gin框架。   Web基础。    1.架构 使用mysql作为数据库，Gin作为Web框架。  2.功能模块 1.自定义Person结构体" />
        <link rel="icon" href="__ADDON__/img/freesurgenode/favicon.ico" type="image/x-icon"/>
    <link rel="stylesheet" href="/assets/website/js/frontend/freesurgenode/mdi/css/materialdesignicons.min.css">
    <link rel="stylesheet" href="/assets/website/js/frontend/freesurgenode/owl.carousel/css/owl.carousel.css">
    <link rel="stylesheet" href="/assets/website/js/frontend/freesurgenode/owl.carousel/css/owl.theme.default.min.css">
    <link rel="stylesheet" href="/assets/website/js/frontend/freesurgenode/aos/css/aos.css">
    <link rel="stylesheet" href="/assets/website/js/frontend/freesurgenode/jquery-flipster/css/jquery.flipster.css">
    <link rel="stylesheet" href="/assets/website/css/freesurgenode/style.css">
    
<!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-XL2JZC5QJD"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-XL2JZC5QJD');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
        <div id="mobile-menu-overlay"></div>
    <nav class="navbar navbar-expand-lg fixed-top">
        <div class="container">
                        <a class="navbar-brand" href="/">
                <span>Free Surge Node</span>
            </a>
                        <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarTogglerDemo01" aria-controls="navbarTogglerDemo01" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"><i class="mdi mdi-menu"> </i></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarTogglerDemo01">
                <div class="d-lg-none d-flex justify-content-between px-4 py-3 align-items-center">
                    Free Surge Node
                    <a href="javascript:;" class="close-menu"><i class="mdi mdi-close"></i></a>
                </div>
                <ul class="navbar-nav ml-auto align-items-center">
                                        <li class="nav-item">
                        <a class="nav-link" href="/">首页</a>
                    </li>
                                        <li class="nav-item">
                        <a class="nav-link" href="/free-nodes/">免费节点</a>
                    </li>
                                        <li class="nav-item">
                        <a class="nav-link" href="/paid-subscribe/">推荐机场</a>
                    </li>
                                        <li class="nav-item">
                        <a class="nav-link" href="/news/">新闻资讯</a>
                    </li>
                                        <li class="nav-item">
                        <a class="nav-link" href="#">关于</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="#">联系</a>
                    </li>
                </ul>
            </div>
        </div>
    </nav>
    <div class="page-body-wrapper">
        <section id="home" class="home" style="padding-top:80px;">
            <div class="container">
                <div class="row">
                    <div class="col-sm-12">
                        <div class="main-banner">
                            <div class="d-sm-flex justify-content-between">
                                <div>
                                    <div class="banner-title">
                                        <h1 class="font-weight-medium">Go使用Gin+mysql实现增删改查</h1>
                                    </div>
                                    <p class="mt-3">
                                        <a href="/">首页</a> / <a href="/news/">新闻资讯</a> / 正文
                                    </p>
                                </div>
                                <div class="mt-5 mt-lg-0">
                                    <img src="/assets/website/img/freesurgenode/group.png" alt="Free Surge Node" class="img-fluid">
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </section>
        <section class="our-process" id="about">
            <div class="container">
                <div class="row">
                    <div class="col-md-9">
                                          				  				  				<div id="content_views" class="markdown_views prism-atom-one-dark"> </h1> <h2> <a id="0_2" rel="nofollow"></a>0.前置知识</h2> <ul> <li> <p>Go中的struct。</p> </li> <li> <p>mysql、Gin框架。</p> </li> <li> <p>Web基础。</p> </li> </ul> <h2> <a id="1_10" rel="nofollow"></a>1.架构</h2> <p>使用mysql作为数据库，Gin作为Web框架。</p> <h2> <a id="2_14" rel="nofollow"></a>2.功能模块</h2> <p>1.自定义Person结构体</p> <p>2.实现对Person的增删改查。</p> <ul> <li>根据id查询或查询所有</li> <li>插入</li> <li>修改</li> <li>删除</li> </ul> <h2> <a id="3_25" rel="nofollow"></a>3.实现流程</h2> <p>1.建立数据库连接池db，然后连接指定的数据库。</p> <p>2.编写Web接口(增删改查)</p> <p>3.通过postman测试或者直接网页请求测试。</p> <h2> <a id="4_35" rel="nofollow"></a>4.代码</h2> <pre><code class="prism language-go"><span class="token keyword">package</span> main  <span class="token comment">// 导入模块</span> <span class="token keyword">import</span> <span class="token punctuation">(</span> 	<span class="token string">"bytes"</span> 	<span class="token string">"database/sql"</span> 	<span class="token string">"fmt"</span> 	<span class="token string">"github.com/gin-gonic/gin"</span> 	<span class="token boolean">_</span> <span class="token string">"github.com/go-sql-driver/mysql"</span> 	<span class="token string">"log"</span> 	<span class="token string">"net/http"</span> 	<span class="token string">"strconv"</span> <span class="token punctuation">)</span>   <span class="token keyword">var</span> db <span class="token operator">*</span>sql<span class="token punctuation">.</span>DB  <span class="token comment">// Person 自定义Person类</span> <span class="token keyword">type</span> Person <span class="token keyword">struct</span> <span class="token punctuation">{<!-- --></span> 	Id        <span class="token builtin">int</span>    <span class="token string">`json:"id"`</span> 	FirstName <span class="token builtin">string</span> <span class="token string">`json:"first_name" form:"first_name"`</span> 	LastName  <span class="token builtin">string</span> <span class="token string">`json:"last_name" form:"last_name"`</span> <span class="token punctuation">}</span>  <span class="token keyword">func</span> <span class="token punctuation">(</span>p <span class="token operator">*</span>Person<span class="token punctuation">)</span> <span class="token function">get</span><span class="token punctuation">(</span>db <span class="token operator">*</span>sql<span class="token punctuation">.</span>DB<span class="token punctuation">)</span> <span class="token punctuation">(</span>person Person<span class="token punctuation">,</span> err <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span> 	row <span class="token operator">:=</span> db<span class="token punctuation">.</span><span class="token function">QueryRow</span><span class="token punctuation">(</span><span class="token string">"SELECT id,first_name,last_name from person where id=?"</span><span class="token punctuation">,</span> p<span class="token punctuation">.</span>Id<span class="token punctuation">)</span> 	err <span class="token operator">=</span> row<span class="token punctuation">.</span><span class="token function">Scan</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>person<span class="token punctuation">.</span>Id<span class="token punctuation">,</span> <span class="token operator">&amp;</span>person<span class="token punctuation">.</span>FirstName<span class="token punctuation">,</span> <span class="token operator">&amp;</span>person<span class="token punctuation">.</span>LastName<span class="token punctuation">)</span> 	<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{<!-- --></span> 		<span class="token keyword">return</span> 	<span class="token punctuation">}</span> 	<span class="token keyword">return</span> <span class="token punctuation">}</span>  <span class="token keyword">func</span> <span class="token punctuation">(</span>p <span class="token operator">*</span>Person<span class="token punctuation">)</span> <span class="token function">getAll</span><span class="token punctuation">(</span>db <span class="token operator">*</span>sql<span class="token punctuation">.</span>DB<span class="token punctuation">)</span> <span class="token punctuation">(</span>persons <span class="token punctuation">[</span><span class="token punctuation">]</span>Person<span class="token punctuation">,</span> err <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span> 	rows<span class="token punctuation">,</span> err <span class="token operator">:=</span> db<span class="token punctuation">.</span><span class="token function">Query</span><span class="token punctuation">(</span><span class="token string">"select id,first_name,last_name from person"</span><span class="token punctuation">)</span> 	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>rows<span class="token punctuation">)</span> 	<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{<!-- --></span> 		<span class="token keyword">return</span> 	<span class="token punctuation">}</span> 	<span class="token keyword">for</span> rows<span class="token punctuation">.</span><span class="token function">Next</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span> 		<span class="token keyword">var</span> person Person 		rows<span class="token punctuation">.</span><span class="token function">Scan</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>person<span class="token punctuation">.</span>Id<span class="token punctuation">,</span> <span class="token operator">&amp;</span>person<span class="token punctuation">.</span>FirstName<span class="token punctuation">,</span> <span class="token operator">&amp;</span>person<span class="token punctuation">.</span>LastName<span class="token punctuation">)</span> 		persons <span class="token operator">=</span> <span class="token function">append</span><span class="token punctuation">(</span>persons<span class="token punctuation">,</span> person<span class="token punctuation">)</span> 	<span class="token punctuation">}</span> 	<span class="token keyword">defer</span> rows<span class="token punctuation">.</span><span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span> 	<span class="token keyword">return</span> <span class="token punctuation">}</span>  <span class="token keyword">func</span> <span class="token punctuation">(</span>p <span class="token operator">*</span>Person<span class="token punctuation">)</span> <span class="token function">add</span><span class="token punctuation">(</span>db <span class="token operator">*</span>sql<span class="token punctuation">.</span>DB<span class="token punctuation">)</span> <span class="token punctuation">(</span>Id <span class="token builtin">int</span><span class="token punctuation">,</span> err <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span> 	stmt<span class="token punctuation">,</span> err <span class="token operator">:=</span> db<span class="token punctuation">.</span><span class="token function">Prepare</span><span class="token punctuation">(</span><span class="token string">"INSERT into person(first_name,last_name) values (?,?)"</span><span class="token punctuation">)</span> 	<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{<!-- --></span> 		<span class="token keyword">return</span> 	<span class="token punctuation">}</span> 	rs<span class="token punctuation">,</span> err <span class="token operator">:=</span> stmt<span class="token punctuation">.</span><span class="token function">Exec</span><span class="token punctuation">(</span>p<span class="token punctuation">.</span>FirstName<span class="token punctuation">,</span> p<span class="token punctuation">.</span>LastName<span class="token punctuation">)</span> 	<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{<!-- --></span> 		<span class="token keyword">return</span> 	<span class="token punctuation">}</span> 	id<span class="token punctuation">,</span> err <span class="token operator">:=</span> rs<span class="token punctuation">.</span><span class="token function">LastInsertId</span><span class="token punctuation">(</span><span class="token punctuation">)</span> 	<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{<!-- --></span> 		log<span class="token punctuation">.</span><span class="token function">Fatalln</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> 	<span class="token punctuation">}</span> 	Id <span class="token operator">=</span> <span class="token function">int</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span> 	<span class="token keyword">defer</span> stmt<span class="token punctuation">.</span><span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span> 	<span class="token keyword">return</span> <span class="token punctuation">}</span>  <span class="token keyword">func</span> <span class="token punctuation">(</span>p <span class="token operator">*</span>Person<span class="token punctuation">)</span> <span class="token function">update</span><span class="token punctuation">(</span>db <span class="token operator">*</span>sql<span class="token punctuation">.</span>DB<span class="token punctuation">)</span> <span class="token punctuation">(</span>rows <span class="token builtin">int</span><span class="token punctuation">,</span> err <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span> 	stmt<span class="token punctuation">,</span> err <span class="token operator">:=</span> db<span class="token punctuation">.</span><span class="token function">Prepare</span><span class="token punctuation">(</span><span class="token string">"update person set first_name=?,last_name=? where id=?"</span><span class="token punctuation">)</span> 	<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{<!-- --></span> 		log<span class="token punctuation">.</span><span class="token function">Fatalln</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> 	<span class="token punctuation">}</span> 	rs<span class="token punctuation">,</span> err <span class="token operator">:=</span> stmt<span class="token punctuation">.</span><span class="token function">Exec</span><span class="token punctuation">(</span>p<span class="token punctuation">.</span>FirstName<span class="token punctuation">,</span> p<span class="token punctuation">.</span>LastName<span class="token punctuation">,</span> p<span class="token punctuation">.</span>Id<span class="token punctuation">)</span> 	<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{<!-- --></span> 		log<span class="token punctuation">.</span><span class="token function">Fatalln</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> 	<span class="token punctuation">}</span> 	row<span class="token punctuation">,</span> err <span class="token operator">:=</span> rs<span class="token punctuation">.</span><span class="token function">RowsAffected</span><span class="token punctuation">(</span><span class="token punctuation">)</span> 	<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{<!-- --></span> 		log<span class="token punctuation">.</span><span class="token function">Fatalln</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> 	<span class="token punctuation">}</span> 	rows <span class="token operator">=</span> <span class="token function">int</span><span class="token punctuation">(</span>row<span class="token punctuation">)</span> 	<span class="token keyword">defer</span> stmt<span class="token punctuation">.</span><span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span> 	<span class="token keyword">return</span> <span class="token punctuation">}</span>  <span class="token keyword">func</span> <span class="token punctuation">(</span>p <span class="token operator">*</span>Person<span class="token punctuation">)</span> <span class="token function">del</span><span class="token punctuation">(</span>db <span class="token operator">*</span>sql<span class="token punctuation">.</span>DB<span class="token punctuation">)</span> <span class="token punctuation">(</span>rows <span class="token builtin">int</span><span class="token punctuation">,</span> err <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span> 	stmt<span class="token punctuation">,</span> err <span class="token operator">:=</span> db<span class="token punctuation">.</span><span class="token function">Prepare</span><span class="token punctuation">(</span><span class="token string">"delete from person where id=?"</span><span class="token punctuation">)</span> 	<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{<!-- --></span> 		log<span class="token punctuation">.</span><span class="token function">Fatalln</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> 	<span class="token punctuation">}</span> 	rs<span class="token punctuation">,</span> err <span class="token operator">:=</span> stmt<span class="token punctuation">.</span><span class="token function">Exec</span><span class="token punctuation">(</span>p<span class="token punctuation">.</span>Id<span class="token punctuation">)</span> 	<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{<!-- --></span> 		log<span class="token punctuation">.</span><span class="token function">Fatalln</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> 	<span class="token punctuation">}</span> 	row<span class="token punctuation">,</span> err <span class="token operator">:=</span> rs<span class="token punctuation">.</span><span class="token function">RowsAffected</span><span class="token punctuation">(</span><span class="token punctuation">)</span> 	<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{<!-- --></span> 		log<span class="token punctuation">.</span><span class="token function">Fatalln</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> 	<span class="token punctuation">}</span> 	rows <span class="token operator">=</span> <span class="token function">int</span><span class="token punctuation">(</span>row<span class="token punctuation">)</span> 	<span class="token keyword">defer</span> stmt<span class="token punctuation">.</span><span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span> 	<span class="token keyword">return</span> <span class="token punctuation">}</span>  <span class="token keyword">func</span> <span class="token function">test</span><span class="token punctuation">(</span>db <span class="token operator">*</span>sql<span class="token punctuation">.</span>DB<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span> 	rows<span class="token punctuation">,</span> err <span class="token operator">:=</span> db<span class="token punctuation">.</span><span class="token function">Query</span><span class="token punctuation">(</span><span class="token string">"select * from person"</span><span class="token punctuation">)</span> 	<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{<!-- --></span> 		<span class="token keyword">return</span> 	<span class="token punctuation">}</span> 	<span class="token keyword">defer</span> rows<span class="token punctuation">.</span><span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span> 	<span class="token keyword">var</span> persons <span class="token punctuation">[</span><span class="token punctuation">]</span>Person 	<span class="token keyword">for</span> rows<span class="token punctuation">.</span><span class="token function">Next</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span> 		<span class="token keyword">var</span> person Person 		rows<span class="token punctuation">.</span><span class="token function">Scan</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>person<span class="token punctuation">.</span>Id<span class="token punctuation">,</span> <span class="token operator">&amp;</span>person<span class="token punctuation">.</span>FirstName<span class="token punctuation">,</span> <span class="token operator">&amp;</span>person<span class="token punctuation">.</span>LastName<span class="token punctuation">)</span> 		persons <span class="token operator">=</span> <span class="token function">append</span><span class="token punctuation">(</span>persons<span class="token punctuation">,</span> person<span class="token punctuation">)</span> 	<span class="token punctuation">}</span> 	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>persons<span class="token punctuation">)</span> <span class="token punctuation">}</span> <span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span> 	<span class="token keyword">var</span> err <span class="token builtin">error</span> 	db<span class="token punctuation">,</span> err <span class="token operator">:=</span> sql<span class="token punctuation">.</span><span class="token function">Open</span><span class="token punctuation">(</span><span class="token string">"mysql"</span><span class="token punctuation">,</span> <span class="token string">"root:xxxxx@tcp(127.0.0.1:3306)/go_project01?parseTime=true"</span><span class="token punctuation">)</span> 	<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{<!-- --></span> 		log<span class="token punctuation">.</span><span class="token function">Fatal</span><span class="token punctuation">(</span>err<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> 	<span class="token punctuation">}</span> 	<span class="token comment">//defer db.Close()</span> 	err <span class="token operator">=</span> db<span class="token punctuation">.</span><span class="token function">Ping</span><span class="token punctuation">(</span><span class="token punctuation">)</span> 	<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{<!-- --></span> 		log<span class="token punctuation">.</span><span class="token function">Fatal</span><span class="token punctuation">(</span>err<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> 	<span class="token punctuation">}</span> 	<span class="token comment">//test(db)</span> 	<span class="token comment">//创建路由引擎</span> 	router <span class="token operator">:=</span> gin<span class="token punctuation">.</span><span class="token function">Default</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  	<span class="token comment">//查询,返回所有对象和对象个数</span> 	router<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">"/persons"</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>context <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span> 		p <span class="token operator">:=</span> Person<span class="token punctuation">{<!-- --></span><span class="token punctuation">}</span> 		persons<span class="token punctuation">,</span> err <span class="token operator">:=</span> p<span class="token punctuation">.</span><span class="token function">getAll</span><span class="token punctuation">(</span>db<span class="token punctuation">)</span> 		<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{<!-- --></span> 			log<span class="token punctuation">.</span><span class="token function">Fatalln</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> 		<span class="token punctuation">}</span> 		context<span class="token punctuation">.</span><span class="token function">JSON</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusOK<span class="token punctuation">,</span> gin<span class="token punctuation">.</span>H<span class="token punctuation">{<!-- --></span> 			<span class="token string">"result"</span><span class="token punctuation">:</span> persons<span class="token punctuation">,</span> 			<span class="token string">"count"</span><span class="token punctuation">:</span>  <span class="token function">len</span><span class="token punctuation">(</span>persons<span class="token punctuation">)</span><span class="token punctuation">,</span> 		<span class="token punctuation">}</span><span class="token punctuation">)</span> 	<span class="token punctuation">}</span><span class="token punctuation">)</span> 	<span class="token comment">//根据id查询</span> 	router<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">"/person/:id"</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>context <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span> 		<span class="token keyword">var</span> result gin<span class="token punctuation">.</span>H 		id <span class="token operator">:=</span> context<span class="token punctuation">.</span><span class="token function">Param</span><span class="token punctuation">(</span><span class="token string">"id"</span><span class="token punctuation">)</span>  		Id<span class="token punctuation">,</span> err <span class="token operator">:=</span> strconv<span class="token punctuation">.</span><span class="token function">Atoi</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span> 		<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{<!-- --></span> 			log<span class="token punctuation">.</span><span class="token function">Fatalln</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> 		<span class="token punctuation">}</span> 		p <span class="token operator">:=</span> Person<span class="token punctuation">{<!-- --></span> 			Id<span class="token punctuation">:</span> Id<span class="token punctuation">,</span> 		<span class="token punctuation">}</span> 		person<span class="token punctuation">,</span> err <span class="token operator">:=</span> p<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>db<span class="token punctuation">)</span> 		<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{<!-- --></span> 			result <span class="token operator">=</span> gin<span class="token punctuation">.</span>H<span class="token punctuation">{<!-- --></span> 				<span class="token string">"result"</span><span class="token punctuation">:</span> <span class="token boolean">nil</span><span class="token punctuation">,</span> 				<span class="token string">"count"</span><span class="token punctuation">:</span>  <span class="token number">0</span><span class="token punctuation">,</span> 			<span class="token punctuation">}</span> 		<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{<!-- --></span> 			result <span class="token operator">=</span> gin<span class="token punctuation">.</span>H<span class="token punctuation">{<!-- --></span> 				<span class="token string">"result"</span><span class="token punctuation">:</span> person<span class="token punctuation">,</span> 				<span class="token string">"count"</span><span class="token punctuation">:</span>  <span class="token number">1</span><span class="token punctuation">,</span> 			<span class="token punctuation">}</span> 		<span class="token punctuation">}</span> 		context<span class="token punctuation">.</span><span class="token function">JSON</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusOK<span class="token punctuation">,</span> result<span class="token punctuation">)</span> 	<span class="token punctuation">}</span><span class="token punctuation">)</span> 	<span class="token comment">//创建person</span> 	router<span class="token punctuation">.</span><span class="token function">POST</span><span class="token punctuation">(</span><span class="token string">"/person"</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>context <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span> 		<span class="token keyword">var</span> p Person 		err <span class="token operator">:=</span> context<span class="token punctuation">.</span><span class="token function">Bind</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>p<span class="token punctuation">)</span> 		<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{<!-- --></span> 			log<span class="token punctuation">.</span><span class="token function">Fatalln</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> 		<span class="token punctuation">}</span>  		Id<span class="token punctuation">,</span> err <span class="token operator">:=</span> p<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>db<span class="token punctuation">)</span> 		<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{<!-- --></span> 			log<span class="token punctuation">.</span><span class="token function">Fatalln</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> 		<span class="token punctuation">}</span> 		fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>Id<span class="token punctuation">)</span> 		name <span class="token operator">:=</span> p<span class="token punctuation">.</span>FirstName <span class="token operator">+</span> <span class="token string">" "</span> <span class="token operator">+</span> p<span class="token punctuation">.</span>LastName 		context<span class="token punctuation">.</span><span class="token function">JSON</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusOK<span class="token punctuation">,</span> gin<span class="token punctuation">.</span>H<span class="token punctuation">{<!-- --></span> 			<span class="token string">"message"</span><span class="token punctuation">:</span> fmt<span class="token punctuation">.</span><span class="token function">Sprintf</span><span class="token punctuation">(</span><span class="token string">" %s 成功创建"</span><span class="token punctuation">,</span> name<span class="token punctuation">)</span><span class="token punctuation">,</span> 		<span class="token punctuation">}</span><span class="token punctuation">)</span> 	<span class="token punctuation">}</span><span class="token punctuation">)</span> 	<span class="token comment">//更新update</span> 	router<span class="token punctuation">.</span><span class="token function">PUT</span><span class="token punctuation">(</span><span class="token string">"/person/:id"</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>context <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span> 		<span class="token keyword">var</span> <span class="token punctuation">(</span> 			p      Person 			buffer bytes<span class="token punctuation">.</span>Buffer 		<span class="token punctuation">)</span>  		id <span class="token operator">:=</span> context<span class="token punctuation">.</span><span class="token function">Param</span><span class="token punctuation">(</span><span class="token string">"id"</span><span class="token punctuation">)</span> 		Id<span class="token punctuation">,</span> err <span class="token operator">:=</span> strconv<span class="token punctuation">.</span><span class="token function">Atoi</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span> 		<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{<!-- --></span> 			log<span class="token punctuation">.</span><span class="token function">Fatalln</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> 		<span class="token punctuation">}</span> 		err <span class="token operator">=</span> context<span class="token punctuation">.</span><span class="token function">Bind</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>p<span class="token punctuation">)</span> 		<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{<!-- --></span> 			log<span class="token punctuation">.</span><span class="token function">Fatalln</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> 		<span class="token punctuation">}</span> 		p<span class="token punctuation">.</span>Id <span class="token operator">=</span> Id 		rows<span class="token punctuation">,</span> err <span class="token operator">:=</span> p<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span>db<span class="token punctuation">)</span> 		<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{<!-- --></span> 			log<span class="token punctuation">.</span><span class="token function">Fatalln</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> 		<span class="token punctuation">}</span> 		fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>rows<span class="token punctuation">)</span> 		buffer<span class="token punctuation">.</span><span class="token function">WriteString</span><span class="token punctuation">(</span>p<span class="token punctuation">.</span>FirstName<span class="token punctuation">)</span> 		buffer<span class="token punctuation">.</span><span class="token function">WriteString</span><span class="token punctuation">(</span><span class="token string">" "</span><span class="token punctuation">)</span> 		buffer<span class="token punctuation">.</span><span class="token function">WriteString</span><span class="token punctuation">(</span>p<span class="token punctuation">.</span>LastName<span class="token punctuation">)</span> 		name <span class="token operator">:=</span> buffer<span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  		context<span class="token punctuation">.</span><span class="token function">JSON</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusOK<span class="token punctuation">,</span> gin<span class="token punctuation">.</span>H<span class="token punctuation">{<!-- --></span> 			<span class="token string">"message"</span><span class="token punctuation">:</span> fmt<span class="token punctuation">.</span><span class="token function">Sprintf</span><span class="token punctuation">(</span><span class="token string">"成功更新到%s"</span><span class="token punctuation">,</span> name<span class="token punctuation">)</span><span class="token punctuation">,</span> 		<span class="token punctuation">}</span><span class="token punctuation">)</span> 	<span class="token punctuation">}</span><span class="token punctuation">)</span> 	<span class="token comment">//删除person</span> 	router<span class="token punctuation">.</span><span class="token function">DELETE</span><span class="token punctuation">(</span><span class="token string">"/person/:id"</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>context <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span> 		id <span class="token operator">:=</span> context<span class="token punctuation">.</span><span class="token function">Param</span><span class="token punctuation">(</span><span class="token string">"id"</span><span class="token punctuation">)</span>  		Id<span class="token punctuation">,</span> err <span class="token operator">:=</span> strconv<span class="token punctuation">.</span><span class="token function">ParseInt</span><span class="token punctuation">(</span>id<span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span> 		<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{<!-- --></span> 			log<span class="token punctuation">.</span><span class="token function">Fatalln</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> 		<span class="token punctuation">}</span> 		p <span class="token operator">:=</span> Person<span class="token punctuation">{<!-- --></span>Id<span class="token punctuation">:</span> <span class="token function">int</span><span class="token punctuation">(</span>Id<span class="token punctuation">)</span><span class="token punctuation">}</span> 		rows<span class="token punctuation">,</span> err <span class="token operator">:=</span> p<span class="token punctuation">.</span><span class="token function">del</span><span class="token punctuation">(</span>db<span class="token punctuation">)</span> 		<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{<!-- --></span> 			log<span class="token punctuation">.</span><span class="token function">Fatalln</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> 		<span class="token punctuation">}</span> 		fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">"delete rows: "</span><span class="token punctuation">,</span> rows<span class="token punctuation">)</span>  		context<span class="token punctuation">.</span><span class="token function">JSON</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusOK<span class="token punctuation">,</span> gin<span class="token punctuation">.</span>H<span class="token punctuation">{<!-- --></span> 			<span class="token string">"message"</span><span class="token punctuation">:</span> fmt<span class="token punctuation">.</span><span class="token function">Sprintf</span><span class="token punctuation">(</span><span class="token string">"成功删除用户：%s"</span><span class="token punctuation">,</span> id<span class="token punctuation">)</span><span class="token punctuation">,</span> 		<span class="token punctuation">}</span><span class="token punctuation">)</span> 	<span class="token punctuation">}</span><span class="token punctuation">)</span> 	router<span class="token punctuation">.</span><span class="token function">Run</span><span class="token punctuation">(</span><span class="token string">":8080"</span><span class="token punctuation">)</span> <span class="token punctuation">}</span>  </code></pre> <hr/> <h2> <a id="5_286" rel="nofollow"></a>5.结果</h2> <p><img decoding="async" src="http://img.555519.xyz/uploads/20221230/1da08356ddbace2f8831084fc77fac26.jpg" alt="Go使用Gin+mysql实现增删改查"><br /><img decoding="async" src="http://img.555519.xyz/uploads/20221230/5fd65bce2114d831680843d144892a41.jpg" alt="Go使用Gin+mysql实现增删改查"></p> </p></div> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>下一个：<a href="/news/article-18727.htm">宠物鲜粮市场风险分析论文题目（宠物粮行业环境分析）</a></p>
                                    </div>
                                    </div>
                    <div class="col-md-3">
                        <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/free-nodes/2024-10-16-free-subscribe-node.htm" title="10月16日→19.9M/S|2024年最新免费节点Free Surge Node订阅链接地址">10月16日→19.9M/S|2024年最新免费节点Free Surge Node订阅链接地址</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-11-8-surge-node-github.htm" title="11月8日→22.1M/S|2024年最新免费节点Free Surge Node订阅链接地址">11月8日→22.1M/S|2024年最新免费节点Free Surge Node订阅链接地址</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-11-5-node-share.htm" title="11月5日→19.8M/S|2024年最新免费节点Free Surge Node订阅链接地址">11月5日→19.8M/S|2024年最新免费节点Free Surge Node订阅链接地址</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-11-18-free-high-speed-nodes.htm" title="11月18日→19.9M/S|2024年最新免费节点Free Surge Node订阅链接地址">11月18日→19.9M/S|2024年最新免费节点Free Surge Node订阅链接地址</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-10-31-node-share-links.htm" title="10月31日→19.8M/S|2024年最新免费节点Free Surge Node订阅链接地址">10月31日→19.8M/S|2024年最新免费节点Free Surge Node订阅链接地址</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-9-28-latest-surge-node.htm" title="9月28日→22.7M/S|2024年最新免费节点Free Surge Node订阅链接地址">9月28日→22.7M/S|2024年最新免费节点Free Surge Node订阅链接地址</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-9-29-free-high-speed-nodes.htm" title="9月29日→20.4M/S|2024年最新免费节点Free Surge Node订阅链接地址">9月29日→20.4M/S|2024年最新免费节点Free Surge Node订阅链接地址</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-9-10-free-surge-node.htm" title="9月10日→20.5M/S|2024年最新免费节点Free Surge Node订阅链接地址">9月10日→20.5M/S|2024年最新免费节点Free Surge Node订阅链接地址</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-11-1-surge-node.htm" title="11月1日→18.7M/S|2024年最新免费节点Free Surge Node订阅链接地址">11月1日→18.7M/S|2024年最新免费节点Free Surge Node订阅链接地址</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-11-10-node-share-links.htm" title="11月10日→19.9M/S|2024年最新免费节点Free Surge Node订阅链接地址">11月10日→19.9M/S|2024年最新免费节点Free Surge Node订阅链接地址</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">31</span> <a href="/date/2024-11/" title="2024-11 归档">2024-11</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">31</span> <a href="/date/2024-10/" title="2024-10 归档">2024-10</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">23</span> <a href="/date/2024-09/" title="2024-09 归档">2024-09</a></h4>
            </li>
                    </ul>
    </div>
</div>

                    </div>
                </div>
            </div>
        </section>
    </div>
        <footer class="footer">
        <div class="footer-bottom">
            <div class="container">
                <div class="d-flex justify-content-between align-items-center">
                    <div class="d-flex align-items-center">
                        <p class="mb-0 text-small pt-1 pl-4">
                            <a href="/">Free Surge Node机场节点订阅官网</a> 版权所有 Powered by WordPress
                        </p>
                    </div>
                </div>
            </div>
        </div>
    </footer>
    <script src="/assets/website/js/frontend/freesurgenode/jquery.min.js"></script>
    <script src="/assets/website/js/frontend/freesurgenode/base/vendor.bundle.base.js"></script>
    <script src="/assets/website/js/frontend/freesurgenode/owl.carousel/js/owl.carousel.js"></script>
    <script src="/assets/website/js/frontend/freesurgenode/aos/js/aos.js"></script>
    <script src="/assets/website/js/frontend/freesurgenode/jquery-flipster/js/jquery.flipster.min.js"></script>
    <script src="/assets/website/js/frontend/freesurgenode/template.js"></script>
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script><script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>