<!DOCTYPE html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://freesurgenode.github.io/news/article-22824.htm" />
    <!-- Required meta tags -->
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <title>Python基础：理解SQL注入问题的起因，掌握pymysql参数化防止黑客使用SQL注入浸入系统和拖库</title>
        <meta name="description" content="1、首先我们了解一下什么叫SQL注入问题 SQL注入是一个很古老的系统安全问题，黑客可以通过构造字符串，尝试改变实际执行的SQL语句，从而达到绕过系统认证，或者提取系统中自己没有权限的数据来脱库。出现" />
        <link rel="icon" href="/assets/website/img/freesurgenode/favicon.ico" type="image/x-icon"/>
    <link rel="stylesheet" href="/assets/website/js/frontend/freesurgenode/mdi/css/materialdesignicons.min.css">
    <link rel="stylesheet" href="/assets/website/js/frontend/freesurgenode/owl.carousel/css/owl.carousel.css">
    <link rel="stylesheet" href="/assets/website/js/frontend/freesurgenode/owl.carousel/css/owl.theme.default.min.css">
    <link rel="stylesheet" href="/assets/website/js/frontend/freesurgenode/aos/css/aos.css">
    <link rel="stylesheet" href="/assets/website/js/frontend/freesurgenode/jquery-flipster/css/jquery.flipster.css">
    <link rel="stylesheet" href="/assets/website/css/freesurgenode/style.css">
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-XL2JZC5QJD"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-XL2JZC5QJD');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
        <div id="mobile-menu-overlay"></div>
    <nav class="navbar navbar-expand-lg fixed-top">
        <div class="container">
                        <a class="navbar-brand" href="/">
                <span>Free Surge Node</span>
            </a>
                        <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarTogglerDemo01" aria-controls="navbarTogglerDemo01" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"><i class="mdi mdi-menu"> </i></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarTogglerDemo01">
                <div class="d-lg-none d-flex justify-content-between px-4 py-3 align-items-center">
                    Free Surge Node
                    <a href="javascript:;" class="close-menu"><i class="mdi mdi-close"></i></a>
                </div>
                <ul class="navbar-nav ml-auto align-items-center">
                                        <li class="nav-item">
                        <a class="nav-link" href="/">首页</a>
                    </li>
                                        <li class="nav-item">
                        <a class="nav-link" href="/free-nodes/">免费节点</a>
                    </li>
                                        <li class="nav-item">
                        <a class="nav-link" href="/paid-subscribe/">推荐机场</a>
                    </li>
                                        <li class="nav-item">
                        <a class="nav-link" href="/news/">新闻资讯</a>
                    </li>
                                        <li class="nav-item">
                        <a class="nav-link" href="#">关于</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="#">联系</a>
                    </li>
                </ul>
            </div>
        </div>
    </nav>
    <div class="page-body-wrapper">
        <section id="home" class="home" style="padding-top:80px;">
            <div class="container">
                <div class="row">
                    <div class="col-sm-12">
                        <div class="main-banner">
                            <div class="d-sm-flex justify-content-between">
                                <div>
                                    <div class="banner-title">
                                        <h1 class="font-weight-medium">Python基础：理解SQL注入问题的起因，掌握pymysql参数化防止黑客使用SQL注入浸入系统和拖库</h1>
                                    </div>
                                    <p class="mt-3">
                                        <a href="/">首页</a> / <a href="/news/">新闻资讯</a> / 正文
                                    </p>
                                </div>
                                <div class="mt-5 mt-lg-0">
                                    <img src="/assets/website/img/freesurgenode/group.png" alt="Free Surge Node" class="img-fluid">
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </section>
        <section class="our-process" id="about">
            <div class="container">
                <div class="row">
                    <div class="col-md-9">
                                        <input type="hidden" id="share-website-info" data-name="Surge Node节点订阅站" data-url="https://surgenode.github.io">
                  				  				  				<div id="content_views" class="htmledit_views"> <h2>1、首先我们了解一下什么叫SQL注入问题</h2> <p style="text-indent:33px;">SQL注入是一个很古老的系统安全问题，黑客可以通过构造字符串，尝试改变实际执行的SQL语句，从而达到绕过系统认证，或者提取系统中自己没有权限的数据来脱库。出现这个问题的根本原因是开发者在使用SQL的时候，采用的是拼接字符串的方式来实现SQL语句的参数传值，当然这种问题在ORM框架盛行的今天其实出现概率已经很小了，具体例子如下：</p> <ul> <li> <p><strong>SQL注入绕过认证原理，如下代码就存在绕过认证的安全问题：</strong></p> </li> </ul> <ul> <li> <p><strong>正常情况下，使用正确和错误的用户名和密码都能够限制认证</strong></p> </li> </ul> <p>&nbsp; &nbsp; &nbsp; &nbsp;数库数据：</p> <p><img fetchpriority="high" decoding="async" alt="" height="114" src="http://img.555519.xyz/uploads/20221230/f554d47cd0d9ffd36701f000d01933e6.jpg"></p> <pre><code class="language-python"># 建立数据库连接 def login(userName, userPwd):     connection = pymysql.connect(host='127.0.0.1', user='root', password="root",                                  database='newtest', port=3306, charset='utf8')     # 获取游标对象     cursor = connection.cursor()     # sql = "select * from t_user where username='%s' and userpwd='%s'" % (userName, userPwd)     sql = "select * from t_user where username='"+ userName +"' and userpwd='" + userPwd +"'"     print(sql)     # 执行查询操作     result = cursor.execute(sql)     connection.commit()     userInfo = cursor.fetchone()     connection.close() #     return userInfo</code></pre> <pre><code class="language-python"># 普通登录，正确的用户名和密码登录成功 user = login('xiaojiejie', '123456') if user:     print("登录成功")  # 普通登录，错误的用户名或密码登录失败 user = login('xiaojiejie', '111111') if user:     print("登录成功") else:     print("登录失败")</code></pre> <p style="text-indent:33px;">如下，第一次正确的用户名和密码，提示成功，第二密码是错误的，提示失败</p> <p><img decoding="async" alt="" height="136" src="http://img.555519.xyz/uploads/20221230/770ca07e59541d0c4b44cf8e622d3812.jpg"></p> <ul> <li><strong>SQL注入情况，通过传入特殊构造的参数，从而达到改变实际执行SQL语句绕过认证的目的</strong></li> </ul> <pre><code class="language-python"># 构造特殊的字符串，达到SQL注入的目的 user = login("xiaojiejie", "1' or '1'='1") if user:     print("绕过认证，登录成功") else:     print("登录失败")</code></pre> <p style="text-indent:33px;">以上在传入参数的时候，密码特殊处理了，1' or '1'='1，从而使得密码和原始SQL在字符串拼接的时候，构成了如下的SQL</p> <pre><code class="language-sql">select * from t_user where username='xiaojiejie' and userpwd='1' or '1'='1'</code></pre> <p style="text-indent:33px;">引入&nbsp;or '1'='1'是恒成真的，所以可以绕过认证。</p> <p style="text-indent:33px;"><strong>问题的根本原因就在于SQL语句：</strong></p> <p style="text-indent:33px;"><strong><span style="color:#f33b45;">&nbsp;sql = "select * from t_user where username='"+ userName +"' and userpwd='" + userPwd +"'"&nbsp;</span></strong></p> <p style="text-indent:33px;"><span style="color:#f33b45;"><strong>是通过字符串拼接出来的，这样就让一些别有用心的人有机可趁。</strong></span></p> <p style="text-indent:33px;">&nbsp;</p> <h2 style="text-indent:0px;">2、SQL语句参数化是解决这类问题的通用方案</h2> <p style="text-indent:33px;">SQL语句参数化是数据库技术里通用的解决SQL注入的最佳解决方案，其实就是在程序向数据库发送SQL执行的时候将SQL语句和参数分开传递，需要补充的动态参数在SQL语句中使用占位符占位，然后在数据库端在填入参数执行，这样既规避了SQL注入的问题，同时也一定程度提高了数据库执行SQL的效率。就像Java中JDBC支持preparedStatement，Python也支持SQL参数化。实现如下：</p> <pre><code class="language-python">def loginParams(params=[]):     connection = pymysql.connect(host='127.0.0.1', user='root', password="root",                                  database='newtest', port=3306, charset='utf8')     # 获取游标对象     cursor = connection.cursor()     sql = "select * from t_user where username=%s and userpwd=%s"     print(sql)     # 执行查询操作     result = cursor.execute(sql, params)     connection.commit()     userInfo = cursor.fetchone()     connection.close() #     return userInfo </code></pre> <ul> <li> <h3 style="text-indent:33px;">再次尝试绕过认证：</h3> </li> </ul> <pre><code class="language-python"># 构造特殊的字符串，参数化后无法达到SQL注入的目的 user = loginParams(["xiaojiejie", "1' or '1'='1"]) print(user) if user:     print("绕过认证，登录成功") else:     print("绕过认证，登录失败")</code></pre> <p><strong>绕过失败：</strong></p> <p><img decoding="async" alt="" height="101" src="http://img.555519.xyz/uploads/20221230/85b0d097813cc7188d43ea82f7accff5.jpg"></p> </h1> <p style="text-indent:33px;">通常Web系统都可以使用id来获得用户的个人信息，那么如果要看到别人的个人信息或者系统中所有用户的信息，就是一个拖库方法，SQL具有采用字符串拼接也会引起这样的安全问题，例如：</p> <pre><code class="language-python">def profile(userId):     connection = pymysql.connect(host='127.0.0.1', user='root', password="root",                                  database='newtest', port=3306, charset='utf8')     # 获取游标对象     cursor = connection.cursor()     sql = "select * from t_user where userid=" +str(userId)     print(sql)     # 执行查询操作     result = cursor.execute(sql)     connection.commit()     userInfo = cursor.fetchall()     connection.close()  #     return userInfo     pass  userInfo = profile(1) print(userInfo)</code></pre> <p style="text-indent:33px;">根据个人userid能够读取自己的信息</p> <p style="text-indent:33px;"><img loading="lazy" decoding="async" alt="" height="69" src="http://img.555519.xyz/uploads/20221230/bdd2e54851648fbc671eacb23bbf8ee6.jpg"></p> <p style="text-indent:33px;">对于一个普通用户来说，他并不具读取其他用户的个人信息的权限，我们改一下参数：</p> <pre><code class="language-python"># 越权读取了表中全部用户的信息 userInfo = profile("1 or 1=1") print(userInfo)</code></pre> <p style="text-indent:0;"><img loading="lazy" decoding="async" alt="" height="160" src="http://img.555519.xyz/uploads/20221230/4e4e28f14ea1dcc310195346c4b64430.jpg"></p> <p style="text-indent:33px;">以上可以看到执行的通过传入的参数，实际执行的SQL是：</p> <p style="text-indent:33px;">select * from t_user where userid=1 or 1=1</p> <p style="text-indent:33px;">从而实现了拖库，是不是很危险</p> </h1> </p></div> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-22823.htm">环形链表方法解决约瑟夫环问题（JAVA）</a></p>
                                        <p>下一个：<a href="/news/article-23272.htm">Springboot之请求映射</a></p>
                                    </div>
                                    </div>
                    <div class="col-md-3">
                        <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/news/article-23273.htm" title="动物使用疫苗时应注意哪些事项 动物使用疫苗时应注意哪些事项呢">动物使用疫苗时应注意哪些事项 动物使用疫苗时应注意哪些事项呢</a></li>
                        <li class="py-2"><a href="/news/article-26081.htm" title="中国十大品牌兽药批发（中国十大名牌兽药厂家）">中国十大品牌兽药批发（中国十大名牌兽药厂家）</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-9-8-free-high-speed-nodes.htm" title="9月8日→22.3M/S|2024年最新免费节点Free Surge Node订阅链接地址">9月8日→22.3M/S|2024年最新免费节点Free Surge Node订阅链接地址</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-12-3-surge-node.htm" title="12月3日→18.7M/S|2024年最新免费节点Free Surge Node订阅链接地址">12月3日→18.7M/S|2024年最新免费节点Free Surge Node订阅链接地址</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-10-17-free-subscribe-node.htm" title="10月17日→22.8M/S|2024年最新免费节点Free Surge Node订阅链接地址">10月17日→22.8M/S|2024年最新免费节点Free Surge Node订阅链接地址</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-11-25-surge-node-github.htm" title="11月25日→21.4M/S|2024年最新免费节点Free Surge Node订阅链接地址">11月25日→21.4M/S|2024年最新免费节点Free Surge Node订阅链接地址</a></li>
                        <li class="py-2"><a href="/news/article-19157.htm" title="使用Jenkins实现前端自动化打包部署（Linux版本）">使用Jenkins实现前端自动化打包部署（Linux版本）</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-10-28-node-share-links.htm" title="10月28日→19.3M/S|2024年最新免费节点Free Surge Node订阅链接地址">10月28日→19.3M/S|2024年最新免费节点Free Surge Node订阅链接地址</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-10-7-free-node-subscribe-links.htm" title="10月7日→22.4M/S|2024年最新免费节点Free Surge Node订阅链接地址">10月7日→22.4M/S|2024年最新免费节点Free Surge Node订阅链接地址</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-9-23-free-node-subscribe-links.htm" title="9月23日→21.5M/S|2024年最新免费节点Free Surge Node订阅链接地址">9月23日→21.5M/S|2024年最新免费节点Free Surge Node订阅链接地址</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">57</span> <a href="/date/2024-12/" title="2024-12 归档">2024-12</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">34</span> <a href="/date/2024-11/" title="2024-11 归档">2024-11</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">31</span> <a href="/date/2024-10/" title="2024-10 归档">2024-10</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">23</span> <a href="/date/2024-09/" title="2024-09 归档">2024-09</a></h4>
            </li>
                    </ul>
    </div>
</div>

                    </div>
                </div>
            </div>
        </section>
    </div>
        <footer class="footer">
        <div class="footer-bottom">
            <div class="container">
                <div class="d-flex justify-content-between align-items-center">
                    <div class="d-flex align-items-center">
                        <p class="mb-0 text-small pt-1 pl-4">
                            <p>
                                <a href="/">首页</a> | 
                                <a href="/free-node/">免费节点</a> | 
                                <a href="/news/">新闻资讯</a> |
                                <a href="/about-us.htm">关于我们</a> |
                                <a href="/disclaimer.htm">免责申明</a> |
                                <a href="/privacy.htm">隐私申明</a> |
                                <a href="/sitemap.xml">网站地图</a>
                            </p>
                            <a href="/">Free Surge Node机场节点订阅官网</a> 版权所有 Powered by WordPress
                        </p>
                    </div>
                </div>
            </div>
        </div>
    </footer>
    <script src="/assets/website/js/frontend/freesurgenode/jquery.min.js"></script>
    <script src="/assets/website/js/frontend/freesurgenode/base/vendor.bundle.base.js"></script>
    <script src="/assets/website/js/frontend/freesurgenode/owl.carousel/js/owl.carousel.js"></script>
    <script src="/assets/website/js/frontend/freesurgenode/aos/js/aos.js"></script>
    <script src="/assets/website/js/frontend/freesurgenode/jquery-flipster/js/jquery.flipster.min.js"></script>
    <script src="/assets/website/js/frontend/freesurgenode/template.js"></script>
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script><script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>