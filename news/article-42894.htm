<!DOCTYPE html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://freesurgenode.github.io/news/article-42894.htm" />
    <!-- Required meta tags -->
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <title>希尔排序（Java语言实现）</title>
        <meta name="description" content="希尔排序： 在简单插入排序经过改进的更高效版本，也称缩小增量排序。 算法基本思想： 把记录按下标的一定增量分组，对每组使用直接插入排序算法排序；随着增量逐渐减小，每组包含的关键词越来越多，当增量减至1" />
        <link rel="icon" href="/assets/website/img/freesurgenode/favicon.ico" type="image/x-icon"/>

    <meta name="author" content="Free Surge Node机场节点订阅中文站">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://freesurgenode.github.io/news/article-42894.htm" />
    <meta property="og:site_name" content="Free Surge Node机场节点订阅中文站" />
    <meta property="og:title" content="希尔排序（Java语言实现）" />
    <meta property="og:image" content="https://freesurgenode.github.io/uploads/20240908/0baab8015ef665f1ac77f7acfff8ac41.webp" />
        <meta property="og:release_date" content="2025-01-19T07:09:55" />
    <meta property="og:updated_time" content="2025-01-19T07:09:55" />
        <meta property="og:description" content="希尔排序： 在简单插入排序经过改进的更高效版本，也称缩小增量排序。 算法基本思想： 把记录按下标的一定增量分组，对每组使用直接插入排序算法排序；随着增量逐渐减小，每组包含的关键词越来越多，当增量减至1" />
        
    <link rel="stylesheet" href="/assets/website/js/frontend/freesurgenode/mdi/css/materialdesignicons.min.css">
    <link rel="stylesheet" href="/assets/website/js/frontend/freesurgenode/owl.carousel/css/owl.carousel.css">
    <link rel="stylesheet" href="/assets/website/js/frontend/freesurgenode/owl.carousel/css/owl.theme.default.min.css">
    <link rel="stylesheet" href="/assets/website/js/frontend/freesurgenode/aos/css/aos.css">
    <link rel="stylesheet" href="/assets/website/js/frontend/freesurgenode/jquery-flipster/css/jquery.flipster.css">
    <link rel="stylesheet" href="/assets/website/css/freesurgenode/style.css">
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-XL2JZC5QJD"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-XL2JZC5QJD');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
        <div id="mobile-menu-overlay"></div>
    <nav class="navbar navbar-expand-lg fixed-top">
        <div class="container">
                        <a class="navbar-brand" href="/">
                <span>Free Surge Node</span>
            </a>
                        <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarTogglerDemo01" aria-controls="navbarTogglerDemo01" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"><i class="mdi mdi-menu"> </i></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarTogglerDemo01">
                <div class="d-lg-none d-flex justify-content-between px-4 py-3 align-items-center">
                    Free Surge Node
                    <a href="javascript:;" class="close-menu"><i class="mdi mdi-close"></i></a>
                </div>
                <ul class="navbar-nav ml-auto align-items-center">
                                        <li class="nav-item">
                        <a class="nav-link" href="/">首页</a>
                    </li>
                                        <li class="nav-item">
                        <a class="nav-link" href="/free-nodes/">免费节点</a>
                    </li>
                                        <li class="nav-item">
                        <a class="nav-link" href="/paid-subscribe/">推荐机场</a>
                    </li>
                                        <li class="nav-item">
                        <a class="nav-link" href="/news/">新闻资讯</a>
                    </li>
                                        <li class="nav-item">
                        <a class="nav-link" href="#">关于</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="#">联系</a>
                    </li>
                </ul>
            </div>
        </div>
    </nav>
    <div class="page-body-wrapper">
        <section id="home" class="home" style="padding-top:80px;">
            <div class="container">
                <div class="row">
                    <div class="col-sm-12">
                        <div class="main-banner">
                            <div class="d-sm-flex justify-content-between">
                                <div>
                                    <div class="banner-title">
                                        <h1 class="font-weight-medium">希尔排序（Java语言实现）</h1>
                                    </div>
                                    <p class="mt-3">
                                        <a href="/">首页</a> / <a href="/news/">新闻资讯</a> / 正文
                                    </p>
                                </div>
                                <div class="mt-5 mt-lg-0">
                                    <img src="/assets/website/img/freesurgenode/group.png" alt="Free Surge Node" class="img-fluid">
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </section>
        <section class="our-process" id="about">
            <div class="container">
                <div class="row">
                    <div class="col-md-9">
                                        <input type="hidden" id="share-website-info" data-name="Surge Node节点订阅站" data-url="https://surgenode.github.io">
                  				  				  				<div id="content_views" class="markdown_views prism-atom-one-dark"> <p>希尔排序：<br /> 在简单插入排序经过改进的更高效版本，也称<strong>缩小增量排序</strong>。<br /> 算法基本思想：<br /> 把记录按下标的一定增量分组，对每组使用直接插入排序算法排序；<strong>随着增量逐渐减小，每组包含的关键词越来越多</strong>，当增量减至1时，整个文件恰被分成一组，算法终止。<br /> 希尔排序有两种方法：<strong>交换法</strong>(效率不高) 和<strong>移位法</strong>。<br /> 算法图解：<br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220902/33f5b18bef1583cb264ede6358cb3ffe.jpg" alt="希尔排序（Java语言实现）"><br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220902/f9d4f96ff4713161a61ed240c78f3469.jpg" alt="希尔排序（Java语言实现）"><br /> 算法实现：<br /><strong>交换法：</strong></p> <pre><code class="prism language-java"><span class="token comment">//该算法是希尔排序中的交换法(效率不高)</span><span class="token keyword">public</span><span class="token keyword">static</span><span class="token keyword">void</span><span class="token function">shellSort</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr<span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token keyword">int</span> temp<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token keyword">int</span> count<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> stepSize<span class="token operator">=</span> arr<span class="token punctuation">.</span>length<span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">;</span> stepSize<span class="token operator">&gt;</span><span class="token number">0</span><span class="token punctuation">;</span> stepSize<span class="token operator">/=</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span> stepSize<span class="token punctuation">;</span> i<span class="token operator">&lt;</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token comment">//遍历各组中所有的元素(共stepSize组)，步长为stepSize</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> j<span class="token operator">=</span> i<span class="token operator">-</span> stepSize<span class="token punctuation">;</span> j<span class="token operator">&gt;=</span><span class="token number">0</span><span class="token punctuation">;</span> j<span class="token operator">-=</span> stepSize<span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token comment">//如果当前元素大于加上步长后的那个元素，说明交换</span><span class="token keyword">if</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">&gt;</span> arr<span class="token punctuation">[</span>j<span class="token operator">+</span> stepSize<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span>                         temp<span class="token operator">=</span> arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>                         arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">=</span> arr<span class="token punctuation">[</span>j<span class="token operator">+</span> stepSize<span class="token punctuation">]</span><span class="token punctuation">;</span>                         arr<span class="token punctuation">[</span>j<span class="token operator">+</span> stepSize<span class="token punctuation">]</span><span class="token operator">=</span> temp<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"希尔排序第"</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">++</span>count<span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">"轮"</span><span class="token operator">+</span><span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"排序的结果为:"</span><span class="token operator">+</span><span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre> <p>这里的第三层循环 j -= stepSize，到第二轮stepSize = 2时，当时有点不理解，自己在纸上写了排序全过程：<br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220902/f4219025eb21a7c1e9bb41aca35b1dbe.jpg" alt="希尔排序（Java语言实现）"><br /> 它可以两组进行交叉排序，且保证有序性。</p> <p><strong>移位法：</strong></p> <pre><code class="prism language-java"><span class="token comment">//对交换式的希尔排序进行优化---&gt;移位法</span><span class="token keyword">public</span><span class="token keyword">static</span><span class="token keyword">void</span><span class="token function">shellSortPlus</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr<span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token comment">//增量stepSize，并逐步缩小增量</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> stepSize<span class="token operator">=</span> arr<span class="token punctuation">.</span>length<span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">;</span> stepSize<span class="token operator">&gt;</span><span class="token number">0</span><span class="token punctuation">;</span> stepSize<span class="token operator">/=</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token comment">//从第stepSize个元素，逐个对其所在组进行直接插入排序</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span> stepSize<span class="token punctuation">;</span> i<span class="token operator">&lt;</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token keyword">int</span> j<span class="token operator">=</span> i<span class="token punctuation">;</span><span class="token keyword">int</span> temp<span class="token operator">=</span> arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">&lt;</span> arr<span class="token punctuation">[</span>j<span class="token operator">-</span>stepSize<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token keyword">while</span><span class="token punctuation">(</span>j<span class="token operator">-</span> stepSize<span class="token operator">&gt;=</span><span class="token number">0</span><span class="token operator">&amp;&amp;</span> temp<span class="token operator">&lt;</span> arr<span class="token punctuation">[</span>j<span class="token operator">-</span>stepSize<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token comment">//移动</span>                         arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">=</span> arr<span class="token punctuation">[</span>j<span class="token operator">-</span>stepSize<span class="token punctuation">]</span><span class="token punctuation">;</span>                         j<span class="token operator">-=</span> stepSize<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment">//当退出while循环时就给temp找到插入的位置</span>                     arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">=</span> temp<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"希尔排序的结果为: "</span><span class="token operator">+</span><span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre> <p>这个移位法算法的时间效率比交换法算法的时间效率高好多。</p> </div> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-42402.htm">批发猫的地方在哪（猫 批发）</a></p>
                                        <p>下一个：<a href="/news/article-42895.htm">gofs使用教程基于golang的开源跨平台文件同步工具</a></p>
                                    </div>
                                    </div>
                    <div class="col-md-3">
                        <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/free-nodes/2025-1-8-surge-node-github.htm" title="1月8日→22.9M/S|最新免费节点SSR/Shadowrocket/V2ray/Clash/Surge订阅链接地址">1月8日→22.9M/S|最新免费节点SSR/Shadowrocket/V2ray/Clash/Surge订阅链接地址</a></li>
                        <li class="py-2"><a href="/news/article-21456.htm" title="动物医院管理流程图表（动物医院管理制度）">动物医院管理流程图表（动物医院管理制度）</a></li>
                        <li class="py-2"><a href="/news/article-32180.htm" title="动物疫苗合格证明在哪办理手续（动物疫苗证是什么样的）">动物疫苗合格证明在哪办理手续（动物疫苗证是什么样的）</a></li>
                        <li class="py-2"><a href="/news/article-22366.htm" title="宠物粮食加工厂需要投资多少钱呢知乎视频下载（宠物粮加工设备）">宠物粮食加工厂需要投资多少钱呢知乎视频下载（宠物粮加工设备）</a></li>
                        <li class="py-2"><a href="/news/article-42402.htm" title="批发猫的地方在哪（猫 批发）">批发猫的地方在哪（猫 批发）</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-12-25-free-high-speed-nodes.htm" title="12月25日→18.7M/S|2024年最新免费节点Free Surge Node订阅链接地址">12月25日→18.7M/S|2024年最新免费节点Free Surge Node订阅链接地址</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-11-22-node-share-links.htm" title="11月22日→20.3M/S|2024年最新免费节点Free Surge Node订阅链接地址">11月22日→20.3M/S|2024年最新免费节点Free Surge Node订阅链接地址</a></li>
                        <li class="py-2"><a href="/news/article-27000.htm" title="Java实习生面试题汇总">Java实习生面试题汇总</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-1-15-free-node-subscribe-links.htm" title="1月15日→19.4M/S|最新免费节点Clash/SSR/Shadowrocket/V2ray/Surge订阅链接地址">1月15日→19.4M/S|最新免费节点Clash/SSR/Shadowrocket/V2ray/Surge订阅链接地址</a></li>
                        <li class="py-2"><a href="/news/article-25139.htm" title="动物疫苗公司产量排名榜前十名（动物疫苗行业排名）">动物疫苗公司产量排名榜前十名（动物疫苗行业排名）</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">57</span> <a href="/date/2025-01/" title="2025-01 归档">2025-01</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">93</span> <a href="/date/2024-12/" title="2024-12 归档">2024-12</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">34</span> <a href="/date/2024-11/" title="2024-11 归档">2024-11</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">25</span> <a href="/date/2024-10/" title="2024-10 归档">2024-10</a></h4>
            </li>
                    </ul>
    </div>
</div>

                    </div>
                </div>
            </div>
        </section>
    </div>
        <footer class="footer">
        <div class="footer-bottom">
            <div class="container">
                <div class="d-flex justify-content-between align-items-center">
                    <div class="d-flex align-items-center">
                        <p class="mb-0 text-small pt-1 pl-4">
                            <p>
                                <a href="/">首页</a> | 
                                <a href="/free-node/">免费节点</a> | 
                                <a href="/news/">新闻资讯</a> |
                                <a href="/about-us.htm">关于我们</a> |
                                <a href="/disclaimer.htm">免责申明</a> |
                                <a href="/privacy.htm">隐私申明</a> |
                                <a href="/sitemap.xml">网站地图</a>
                            </p>
                            <a href="/">Free Surge Node机场节点订阅中文站</a> 版权所有 Powered by WordPress
                        </p>
                    </div>
                </div>
            </div>
        </div>
    </footer>
    <script src="/assets/website/js/frontend/freesurgenode/jquery.min.js"></script>
    <script src="/assets/website/js/frontend/freesurgenode/base/vendor.bundle.base.js"></script>
    <script src="/assets/website/js/frontend/freesurgenode/owl.carousel/js/owl.carousel.js"></script>
    <script src="/assets/website/js/frontend/freesurgenode/aos/js/aos.js"></script>
    <script src="/assets/website/js/frontend/freesurgenode/jquery-flipster/js/jquery.flipster.min.js"></script>
    <script src="/assets/website/js/frontend/freesurgenode/template.js"></script>
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script><script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>